// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: userservice.proto

#include "userservice.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace userservice {
class UserRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserRequest>
      _instance;
} _UserRequest_default_instance_;
class UserResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserResponse>
      _instance;
} _UserResponse_default_instance_;
class AppDemoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AppDemo>
      _instance;
  const ::userservice::UserRequest* userrequest_;
  const ::userservice::UserResponse* userresponse_;
  const ::userservice::MixInfo* mixinfo_;
} _AppDemo_default_instance_;
class MixInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MixInfo>
      _instance;
} _MixInfo_default_instance_;
}  // namespace userservice
namespace protobuf_userservice_2eproto {
void InitDefaultsUserRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::userservice::_UserRequest_default_instance_;
    new (ptr) ::userservice::UserRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::userservice::UserRequest::InitAsDefaultInstance();
}

void InitDefaultsUserRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUserRequestImpl);
}

void InitDefaultsUserResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_userservice_2eproto::InitDefaultsMixInfo();
  {
    void* ptr = &::userservice::_UserResponse_default_instance_;
    new (ptr) ::userservice::UserResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::userservice::UserResponse::InitAsDefaultInstance();
}

void InitDefaultsUserResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUserResponseImpl);
}

void InitDefaultsAppDemoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_userservice_2eproto::InitDefaultsUserRequest();
  protobuf_userservice_2eproto::InitDefaultsUserResponse();
  protobuf_userservice_2eproto::InitDefaultsMixInfo();
  {
    void* ptr = &::userservice::_AppDemo_default_instance_;
    new (ptr) ::userservice::AppDemo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::userservice::AppDemo::InitAsDefaultInstance();
}

void InitDefaultsAppDemo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAppDemoImpl);
}

void InitDefaultsMixInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::userservice::_MixInfo_default_instance_;
    new (ptr) ::userservice::MixInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::userservice::MixInfo::InitAsDefaultInstance();
}

void InitDefaultsMixInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMixInfoImpl);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::userservice::UserRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::userservice::UserRequest, userid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::userservice::UserResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::userservice::UserResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::userservice::UserResponse, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::userservice::UserResponse, result_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::userservice::AppDemo, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::userservice::AppDemo, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::userservice::AppDemoDefaultTypeInternal, userrequest_),
  offsetof(::userservice::AppDemoDefaultTypeInternal, userresponse_),
  offsetof(::userservice::AppDemoDefaultTypeInternal, mixinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::userservice::AppDemo, Request_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::userservice::MixInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::userservice::MixInfo, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::userservice::MixInfo, orgname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::userservice::MixInfo, orgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::userservice::MixInfo, enterprise_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::userservice::MixInfo, enterpriseid_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::userservice::UserRequest)},
  { 6, -1, sizeof(::userservice::UserResponse)},
  { 14, -1, sizeof(::userservice::AppDemo)},
  { 23, -1, sizeof(::userservice::MixInfo)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::userservice::_UserRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::userservice::_UserResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::userservice::_AppDemo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::userservice::_MixInfo_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "userservice.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021userservice.proto\022\013userservice\"\035\n\013User"
      "Request\022\016\n\006userid\030\001 \001(\t\"S\n\014UserResponse\022"
      "\014\n\004code\030\001 \001(\005\022\017\n\007message\030\002 \001(\t\022$\n\006result"
      "\030\003 \001(\0132\024.userservice.MixInfo\"\241\001\n\007AppDemo"
      "\022/\n\013userrequest\030\001 \001(\0132\030.userservice.User"
      "RequestH\000\0221\n\014userresponse\030\002 \001(\0132\031.userse"
      "rvice.UserResponseH\000\022\'\n\007mixinfo\030\003 \001(\0132\024."
      "userservice.MixInfoH\000B\t\n\007Request\"e\n\007MixI"
      "nfo\022\020\n\010username\030\001 \001(\t\022\017\n\007orgname\030\002 \001(\t\022\r"
      "\n\005orgid\030\003 \001(\t\022\022\n\nenterprise\030\004 \001(\t\022\024\n\014ent"
      "erpriseid\030\005 \001(\t2N\n\013UserService\022\?\n\010UserIn"
      "fo\022\030.userservice.UserRequest\032\031.userservi"
      "ce.UserResponseB4\n\031com.dalong.userappser"
      "viceB\nAppServiceZ\013userserviceb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 557);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "userservice.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_userservice_2eproto
namespace userservice {

// ===================================================================

void UserRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserRequest::kUseridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserRequest::UserRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_userservice_2eproto::InitDefaultsUserRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:userservice.UserRequest)
}
UserRequest::UserRequest(const UserRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.userid().size() > 0) {
    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  // @@protoc_insertion_point(copy_constructor:userservice.UserRequest)
}

void UserRequest::SharedCtor() {
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

UserRequest::~UserRequest() {
  // @@protoc_insertion_point(destructor:userservice.UserRequest)
  SharedDtor();
}

void UserRequest::SharedDtor() {
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserRequest::descriptor() {
  ::protobuf_userservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_userservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserRequest& UserRequest::default_instance() {
  ::protobuf_userservice_2eproto::InitDefaultsUserRequest();
  return *internal_default_instance();
}

UserRequest* UserRequest::New(::google::protobuf::Arena* arena) const {
  UserRequest* n = new UserRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:userservice.UserRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool UserRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:userservice.UserRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string userid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->userid().data(), static_cast<int>(this->userid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "userservice.UserRequest.userid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:userservice.UserRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:userservice.UserRequest)
  return false;
#undef DO_
}

void UserRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:userservice.UserRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string userid = 1;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "userservice.UserRequest.userid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->userid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:userservice.UserRequest)
}

::google::protobuf::uint8* UserRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:userservice.UserRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string userid = 1;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "userservice.UserRequest.userid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->userid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:userservice.UserRequest)
  return target;
}

size_t UserRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:userservice.UserRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string userid = 1;
  if (this->userid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:userservice.UserRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UserRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:userservice.UserRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:userservice.UserRequest)
    MergeFrom(*source);
  }
}

void UserRequest::MergeFrom(const UserRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:userservice.UserRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.userid().size() > 0) {

    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
}

void UserRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:userservice.UserRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserRequest::CopyFrom(const UserRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:userservice.UserRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserRequest::IsInitialized() const {
  return true;
}

void UserRequest::Swap(UserRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserRequest::InternalSwap(UserRequest* other) {
  using std::swap;
  userid_.Swap(&other->userid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserRequest::GetMetadata() const {
  protobuf_userservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_userservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserResponse::InitAsDefaultInstance() {
  ::userservice::_UserResponse_default_instance_._instance.get_mutable()->result_ = const_cast< ::userservice::MixInfo*>(
      ::userservice::MixInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserResponse::kCodeFieldNumber;
const int UserResponse::kMessageFieldNumber;
const int UserResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserResponse::UserResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_userservice_2eproto::InitDefaultsUserResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:userservice.UserResponse)
}
UserResponse::UserResponse(const UserResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.has_result()) {
    result_ = new ::userservice::MixInfo(*from.result_);
  } else {
    result_ = NULL;
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:userservice.UserResponse)
}

void UserResponse::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&result_)) + sizeof(code_));
  _cached_size_ = 0;
}

UserResponse::~UserResponse() {
  // @@protoc_insertion_point(destructor:userservice.UserResponse)
  SharedDtor();
}

void UserResponse::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
}

void UserResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserResponse::descriptor() {
  ::protobuf_userservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_userservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserResponse& UserResponse::default_instance() {
  ::protobuf_userservice_2eproto::InitDefaultsUserResponse();
  return *internal_default_instance();
}

UserResponse* UserResponse::New(::google::protobuf::Arena* arena) const {
  UserResponse* n = new UserResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:userservice.UserResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && result_ != NULL) {
    delete result_;
  }
  result_ = NULL;
  code_ = 0;
  _internal_metadata_.Clear();
}

bool UserResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:userservice.UserResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "userservice.UserResponse.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .userservice.MixInfo result = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:userservice.UserResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:userservice.UserResponse)
  return false;
#undef DO_
}

void UserResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:userservice.UserResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "userservice.UserResponse.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  // .userservice.MixInfo result = 3;
  if (this->has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->result_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:userservice.UserResponse)
}

::google::protobuf::uint8* UserResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:userservice.UserResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "userservice.UserResponse.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  // .userservice.MixInfo result = 3;
  if (this->has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->result_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:userservice.UserResponse)
  return target;
}

size_t UserResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:userservice.UserResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // .userservice.MixInfo result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->result_);
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:userservice.UserResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UserResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:userservice.UserResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:userservice.UserResponse)
    MergeFrom(*source);
  }
}

void UserResponse::MergeFrom(const UserResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:userservice.UserResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.has_result()) {
    mutable_result()->::userservice::MixInfo::MergeFrom(from.result());
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
}

void UserResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:userservice.UserResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserResponse::CopyFrom(const UserResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:userservice.UserResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserResponse::IsInitialized() const {
  return true;
}

void UserResponse::Swap(UserResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserResponse::InternalSwap(UserResponse* other) {
  using std::swap;
  message_.Swap(&other->message_);
  swap(result_, other->result_);
  swap(code_, other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserResponse::GetMetadata() const {
  protobuf_userservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_userservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AppDemo::InitAsDefaultInstance() {
  ::userservice::_AppDemo_default_instance_.userrequest_ = const_cast< ::userservice::UserRequest*>(
      ::userservice::UserRequest::internal_default_instance());
  ::userservice::_AppDemo_default_instance_.userresponse_ = const_cast< ::userservice::UserResponse*>(
      ::userservice::UserResponse::internal_default_instance());
  ::userservice::_AppDemo_default_instance_.mixinfo_ = const_cast< ::userservice::MixInfo*>(
      ::userservice::MixInfo::internal_default_instance());
}
void AppDemo::set_allocated_userrequest(::userservice::UserRequest* userrequest) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_Request();
  if (userrequest) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      userrequest = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, userrequest, submessage_arena);
    }
    set_has_userrequest();
    Request_.userrequest_ = userrequest;
  }
  // @@protoc_insertion_point(field_set_allocated:userservice.AppDemo.userrequest)
}
void AppDemo::set_allocated_userresponse(::userservice::UserResponse* userresponse) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_Request();
  if (userresponse) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      userresponse = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, userresponse, submessage_arena);
    }
    set_has_userresponse();
    Request_.userresponse_ = userresponse;
  }
  // @@protoc_insertion_point(field_set_allocated:userservice.AppDemo.userresponse)
}
void AppDemo::set_allocated_mixinfo(::userservice::MixInfo* mixinfo) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_Request();
  if (mixinfo) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      mixinfo = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, mixinfo, submessage_arena);
    }
    set_has_mixinfo();
    Request_.mixinfo_ = mixinfo;
  }
  // @@protoc_insertion_point(field_set_allocated:userservice.AppDemo.mixinfo)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AppDemo::kUserrequestFieldNumber;
const int AppDemo::kUserresponseFieldNumber;
const int AppDemo::kMixinfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AppDemo::AppDemo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_userservice_2eproto::InitDefaultsAppDemo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:userservice.AppDemo)
}
AppDemo::AppDemo(const AppDemo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_Request();
  switch (from.Request_case()) {
    case kUserrequest: {
      mutable_userrequest()->::userservice::UserRequest::MergeFrom(from.userrequest());
      break;
    }
    case kUserresponse: {
      mutable_userresponse()->::userservice::UserResponse::MergeFrom(from.userresponse());
      break;
    }
    case kMixinfo: {
      mutable_mixinfo()->::userservice::MixInfo::MergeFrom(from.mixinfo());
      break;
    }
    case REQUEST_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:userservice.AppDemo)
}

void AppDemo::SharedCtor() {
  clear_has_Request();
  _cached_size_ = 0;
}

AppDemo::~AppDemo() {
  // @@protoc_insertion_point(destructor:userservice.AppDemo)
  SharedDtor();
}

void AppDemo::SharedDtor() {
  if (has_Request()) {
    clear_Request();
  }
}

void AppDemo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AppDemo::descriptor() {
  ::protobuf_userservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_userservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AppDemo& AppDemo::default_instance() {
  ::protobuf_userservice_2eproto::InitDefaultsAppDemo();
  return *internal_default_instance();
}

AppDemo* AppDemo::New(::google::protobuf::Arena* arena) const {
  AppDemo* n = new AppDemo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AppDemo::clear_Request() {
// @@protoc_insertion_point(one_of_clear_start:userservice.AppDemo)
  switch (Request_case()) {
    case kUserrequest: {
      delete Request_.userrequest_;
      break;
    }
    case kUserresponse: {
      delete Request_.userresponse_;
      break;
    }
    case kMixinfo: {
      delete Request_.mixinfo_;
      break;
    }
    case REQUEST_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = REQUEST_NOT_SET;
}


void AppDemo::Clear() {
// @@protoc_insertion_point(message_clear_start:userservice.AppDemo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_Request();
  _internal_metadata_.Clear();
}

bool AppDemo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:userservice.AppDemo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .userservice.UserRequest userrequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_userrequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .userservice.UserResponse userresponse = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_userresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .userservice.MixInfo mixinfo = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mixinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:userservice.AppDemo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:userservice.AppDemo)
  return false;
#undef DO_
}

void AppDemo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:userservice.AppDemo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .userservice.UserRequest userrequest = 1;
  if (has_userrequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *Request_.userrequest_, output);
  }

  // .userservice.UserResponse userresponse = 2;
  if (has_userresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *Request_.userresponse_, output);
  }

  // .userservice.MixInfo mixinfo = 3;
  if (has_mixinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *Request_.mixinfo_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:userservice.AppDemo)
}

::google::protobuf::uint8* AppDemo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:userservice.AppDemo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .userservice.UserRequest userrequest = 1;
  if (has_userrequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *Request_.userrequest_, deterministic, target);
  }

  // .userservice.UserResponse userresponse = 2;
  if (has_userresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *Request_.userresponse_, deterministic, target);
  }

  // .userservice.MixInfo mixinfo = 3;
  if (has_mixinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *Request_.mixinfo_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:userservice.AppDemo)
  return target;
}

size_t AppDemo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:userservice.AppDemo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (Request_case()) {
    // .userservice.UserRequest userrequest = 1;
    case kUserrequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *Request_.userrequest_);
      break;
    }
    // .userservice.UserResponse userresponse = 2;
    case kUserresponse: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *Request_.userresponse_);
      break;
    }
    // .userservice.MixInfo mixinfo = 3;
    case kMixinfo: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *Request_.mixinfo_);
      break;
    }
    case REQUEST_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AppDemo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:userservice.AppDemo)
  GOOGLE_DCHECK_NE(&from, this);
  const AppDemo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AppDemo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:userservice.AppDemo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:userservice.AppDemo)
    MergeFrom(*source);
  }
}

void AppDemo::MergeFrom(const AppDemo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:userservice.AppDemo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.Request_case()) {
    case kUserrequest: {
      mutable_userrequest()->::userservice::UserRequest::MergeFrom(from.userrequest());
      break;
    }
    case kUserresponse: {
      mutable_userresponse()->::userservice::UserResponse::MergeFrom(from.userresponse());
      break;
    }
    case kMixinfo: {
      mutable_mixinfo()->::userservice::MixInfo::MergeFrom(from.mixinfo());
      break;
    }
    case REQUEST_NOT_SET: {
      break;
    }
  }
}

void AppDemo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:userservice.AppDemo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppDemo::CopyFrom(const AppDemo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:userservice.AppDemo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppDemo::IsInitialized() const {
  return true;
}

void AppDemo::Swap(AppDemo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AppDemo::InternalSwap(AppDemo* other) {
  using std::swap;
  swap(Request_, other->Request_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AppDemo::GetMetadata() const {
  protobuf_userservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_userservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MixInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MixInfo::kUsernameFieldNumber;
const int MixInfo::kOrgnameFieldNumber;
const int MixInfo::kOrgidFieldNumber;
const int MixInfo::kEnterpriseFieldNumber;
const int MixInfo::kEnterpriseidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MixInfo::MixInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_userservice_2eproto::InitDefaultsMixInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:userservice.MixInfo)
}
MixInfo::MixInfo(const MixInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  orgname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.orgname().size() > 0) {
    orgname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.orgname_);
  }
  orgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.orgid().size() > 0) {
    orgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.orgid_);
  }
  enterprise_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.enterprise().size() > 0) {
    enterprise_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.enterprise_);
  }
  enterpriseid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.enterpriseid().size() > 0) {
    enterpriseid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.enterpriseid_);
  }
  // @@protoc_insertion_point(copy_constructor:userservice.MixInfo)
}

void MixInfo::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  orgname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  orgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  enterprise_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  enterpriseid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

MixInfo::~MixInfo() {
  // @@protoc_insertion_point(destructor:userservice.MixInfo)
  SharedDtor();
}

void MixInfo::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  orgname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  orgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  enterprise_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  enterpriseid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MixInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MixInfo::descriptor() {
  ::protobuf_userservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_userservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MixInfo& MixInfo::default_instance() {
  ::protobuf_userservice_2eproto::InitDefaultsMixInfo();
  return *internal_default_instance();
}

MixInfo* MixInfo::New(::google::protobuf::Arena* arena) const {
  MixInfo* n = new MixInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MixInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:userservice.MixInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  orgname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  orgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  enterprise_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  enterpriseid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool MixInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:userservice.MixInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string username = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "userservice.MixInfo.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string orgname = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_orgname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->orgname().data(), static_cast<int>(this->orgname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "userservice.MixInfo.orgname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string orgid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_orgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->orgid().data(), static_cast<int>(this->orgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "userservice.MixInfo.orgid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string enterprise = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_enterprise()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->enterprise().data(), static_cast<int>(this->enterprise().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "userservice.MixInfo.enterprise"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string enterpriseid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_enterpriseid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->enterpriseid().data(), static_cast<int>(this->enterpriseid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "userservice.MixInfo.enterpriseid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:userservice.MixInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:userservice.MixInfo)
  return false;
#undef DO_
}

void MixInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:userservice.MixInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "userservice.MixInfo.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // string orgname = 2;
  if (this->orgname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->orgname().data(), static_cast<int>(this->orgname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "userservice.MixInfo.orgname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->orgname(), output);
  }

  // string orgid = 3;
  if (this->orgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->orgid().data(), static_cast<int>(this->orgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "userservice.MixInfo.orgid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->orgid(), output);
  }

  // string enterprise = 4;
  if (this->enterprise().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->enterprise().data(), static_cast<int>(this->enterprise().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "userservice.MixInfo.enterprise");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->enterprise(), output);
  }

  // string enterpriseid = 5;
  if (this->enterpriseid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->enterpriseid().data(), static_cast<int>(this->enterpriseid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "userservice.MixInfo.enterpriseid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->enterpriseid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:userservice.MixInfo)
}

::google::protobuf::uint8* MixInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:userservice.MixInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "userservice.MixInfo.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // string orgname = 2;
  if (this->orgname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->orgname().data(), static_cast<int>(this->orgname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "userservice.MixInfo.orgname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->orgname(), target);
  }

  // string orgid = 3;
  if (this->orgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->orgid().data(), static_cast<int>(this->orgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "userservice.MixInfo.orgid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->orgid(), target);
  }

  // string enterprise = 4;
  if (this->enterprise().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->enterprise().data(), static_cast<int>(this->enterprise().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "userservice.MixInfo.enterprise");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->enterprise(), target);
  }

  // string enterpriseid = 5;
  if (this->enterpriseid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->enterpriseid().data(), static_cast<int>(this->enterpriseid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "userservice.MixInfo.enterpriseid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->enterpriseid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:userservice.MixInfo)
  return target;
}

size_t MixInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:userservice.MixInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string username = 1;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string orgname = 2;
  if (this->orgname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->orgname());
  }

  // string orgid = 3;
  if (this->orgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->orgid());
  }

  // string enterprise = 4;
  if (this->enterprise().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->enterprise());
  }

  // string enterpriseid = 5;
  if (this->enterpriseid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->enterpriseid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MixInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:userservice.MixInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const MixInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MixInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:userservice.MixInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:userservice.MixInfo)
    MergeFrom(*source);
  }
}

void MixInfo::MergeFrom(const MixInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:userservice.MixInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.orgname().size() > 0) {

    orgname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.orgname_);
  }
  if (from.orgid().size() > 0) {

    orgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.orgid_);
  }
  if (from.enterprise().size() > 0) {

    enterprise_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.enterprise_);
  }
  if (from.enterpriseid().size() > 0) {

    enterpriseid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.enterpriseid_);
  }
}

void MixInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:userservice.MixInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MixInfo::CopyFrom(const MixInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:userservice.MixInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MixInfo::IsInitialized() const {
  return true;
}

void MixInfo::Swap(MixInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MixInfo::InternalSwap(MixInfo* other) {
  using std::swap;
  username_.Swap(&other->username_);
  orgname_.Swap(&other->orgname_);
  orgid_.Swap(&other->orgid_);
  enterprise_.Swap(&other->enterprise_);
  enterpriseid_.Swap(&other->enterpriseid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MixInfo::GetMetadata() const {
  protobuf_userservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_userservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace userservice

// @@protoc_insertion_point(global_scope)
